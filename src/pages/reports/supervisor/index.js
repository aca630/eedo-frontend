
import { DeleteOutlined, EditOutlined, PlusCircleOutlined, PlusOutlined, SearchOutlined } from "@ant-design/icons";
import { Button, Form, Input, InputNumber, Modal, Popconfirm, Select, Table, Tag } from "antd";
import Cookies from "js-cookie";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";

import { ToastContainer, toast } from 'react-toastify';
import moment from "moment/moment";
import Layout from "../../layouts";


import { DatePicker, Space } from 'antd';
import Link from "next/link";
const { RangePicker } = DatePicker;



export default function Home() {
    const [from, setFrom] = useState(null);
    const [to, setTo] = useState(null);

    const router = useRouter();


    function onCalendarChange(dates, dateStrings) {
        setFrom(dateStrings[0])
        setTo(dateStrings[1])
    }


    return (


        <Layout>
            <Head>
                <title>EEDO</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>


            <div>


                <div className="p-2  mt-2 bg-white shadow-md rounded">
                    <Space direction="vertical" size={12}>
                        <RangePicker onCalendarChange={onCalendarChange} />

                        <Link
                            href={{
                                pathname: '/reports/supervisor/pdf',
                                query: {
                                    from: from,
                                    to:to
                                },
                            }}

                            target="_blank"
                        >

                            <Button type="primary">Generate</Button>

                        </Link>

                        {/* <Button type="primary" onClick={() => {
                            router.push({
                                pathname: '/reports/supervisor/pdf',
                                query: {
                                    drawTime: 17
                                },
                            }, `supervisor/pdf`, {})

                        }}>Generate</Button> */}
                    </Space>


                </div>



                <div className="page">
                    <div className="subpage">

                        <h1 className="text-sm text-center">
                            {/* General Tally Sheet {`${from} ${drawTime - 12}PM`} */}
                        </h1>

                        <div className="font-poppins font-inter   grid grid-cols-5 sm:grid-cols-5 ">

                            <div className="text-xs  border-solid border-x border-y">
                                Game
                            </div>
                            <div className="text-xs  border-solid border-x border-y">
                                Bet Number
                            </div>
                            <div className="text-xs  border-solid border-x border-y">
                                Amount
                            </div>
                        </div>
                        {/* 
                        {
                            data?.map((item, key) => {

                                if (item?.betCode == 'R') {
                                    TotalD4 += item.TotalBetsPerNo;
                                    return (
                                        <div key={key} className="font-poppins font-inter   grid grid-cols-5 sm:grid-cols-5 ">

                                            <div className="text-xs border-solid border-x border-y">
                                                {item.betCode}
                                            </div>
                                            <div className="text-xs  border-solid border-x border-y">
                                                {item.betNo}
                                            </div>
                                            <div className={`text-xs  border-solid border-x border-y text-end ${item.TotalBetsPerNo>800?'text-red-200':''}`}>
                                                {item.TotalBetsPerNo?.toFixed(2)?.replace(/\d(?=(\d{3})+\.)/g, '$&,')}
                                            </div>
                                        </div>
                                    )
                                }

                            })
                        } */}

                        <div className="font-poppins font-inter   grid grid-cols-5 sm:grid-cols-5 ">

                            <div className="col-span-2 text-xs  font-semi-bold border-solid border-x border-y">
                                Total
                            </div>

                            <div className=" text-xs  font-semi-bold border-solid border-x border-y">
                                {/* {TotalD4?.toFixed(2)?.replace(/\d(?=(\d{3})+\.)/g, '$&,')} */}
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </Layout>
    )




}


