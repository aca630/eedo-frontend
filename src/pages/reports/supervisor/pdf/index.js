
import { DeleteOutlined, EditOutlined, PlusCircleOutlined, PlusOutlined, SearchOutlined } from "@ant-design/icons";
import { Button, Form, Input, InputNumber, Modal, Popconfirm, Select, Table, Tag } from "antd";
import Cookies from "js-cookie";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";

import { ToastContainer, toast } from 'react-toastify';
import moment from "moment/moment";


import { DatePicker, Space } from 'antd';
import { GetAllSuperVisorsReport } from "../../../api/reports";
const { RangePicker } = DatePicker;



export default function Home() {

    const router = useRouter();
    const Routerdata = router.query;
    const [data, setData] = useState([])
    const [spvr, setSpvr] = useState([])
    const [datesVal, setdatesVal] = useState([])

    let Totalgross = 0;
    let Totalhits = 0;
    let Totalkabig = 0;

    useEffect(() => {
        HandleGetSupervisorsReports()

    }, [Routerdata?.from, Routerdata?.to])


    const HandleGetSupervisorsReports = async () => {

        try {
            let ApiResponse = await GetAllSuperVisorsReport({
                from: Routerdata?.from,
                to: Routerdata?.to
            })
            setSpvr(ApiResponse?.data?.data[0]);

            setData(ApiResponse?.data?.data);
        }
        catch (error) {

            console.log('error getting Supervisor Reports: ', error);
        }


    }

    var
        startDate = new Date("2023-06-01"),
        endDate = new Date("2023-06-16");
    useEffect(() => {

        datesxx(startDate, endDate)


    }, [])



    function datesxx(start, end) {

        var
            arr = new Array(),
            dt = new Date(start);

        while (dt <= end) {

            arr.push(moment(new Date(dt)).format('YYYY-M-DD'));
            dt.setDate(dt.getDate() + 1);
        }

        setdatesVal(arr);

    }


    return (
        <div>
            <Head>
                <title>EEDO</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>


            <div>


                {
                    datesVal?.map((item, key) => {

                        return (
                            <>

                                {
                                    spvr?.map((item2, key2) => {

                                        let gross = 0;
                                        let hits = 0;
                                        let kabig = 0;

                                        return (
                                            <>
                                                <div className="page">

                                                    <h1 className="text-sm uppercase">{`${key2 += 1}. Supervisor: ${item2?.fullName} Municipality: ${item2?.name} Date: ${item}`}</h1>
                                                    <div className="subpage">
                                                        <div className="font-poppins font-inter   grid grid-cols-4 sm:grid-cols-4 ">

                                                            <div className="text-xs font-semibold border-solid border-x border-y">
                                                                Teller
                                                            </div>
                                                            <div className="text-xs font-semibold border-solid border-x border-y">
                                                                Gross
                                                            </div>
                                                            <div className="text-xs font-semibold border-solid border-x border-y">
                                                                Hits
                                                            </div>

                                                            <div className="text-xs font-semibold border-solid border-x border-y">
                                                                Kabig
                                                            </div>

                                                        </div >
                                                        {
                                                            data[1]?.map((item3, key) => {



                                                                if (item == moment(item3?.created_at).format('YYYY-M-DD') && item2.id == item3.supervisor) {


                                                                    gross += item3.TotalOveAllGross;
                                                                    hits += item3.TotalOveAllHits;
                                                                    kabig += item3.TotalOveAllKabig;


                                                                    Totalgross += item3.TotalOveAllGross;
                                                                    Totalhits += item3.TotalOveAllHits;
                                                                    Totalkabig += item3.TotalOveAllKabig;


                                                                    return (
                                                                        <>

                                                                            <div className="font-poppins font-inter   grid grid-cols-4 sm:grid-cols-4 ">

                                                                                <div className="text-xs  border-solid border-x border-y">
                                                                                    {
                                                                                        item3.username
                                                                                    }
                                                                                </div>
                                                                                <div className="text-xs  border-solid border-x border-y">
                                                                                    {
                                                                                        item3.TotalOveAllGross?.toFixed(2)?.replace(/\d(?=(\d{3})+\.)/g, '$&,') ?? 0
                                                                                    }
                                                                                </div>
                                                                                <div className="text-xs  border-solid border-x border-y">
                                                                                    {item3.TotalOveAllHits?.toFixed(2)?.replace(/\d(?=(\d{3})+\.)/g, '$&,') ?? 0}
                                                                                </div>
                                                                                <div className="text-xs  border-solid border-x border-y">
                                                                                    {item3.TotalOveAllKabig?.toFixed(2)?.replace(/\d(?=(\d{3})+\.)/g, '$&,') ?? item3.TotalOveAllGross?.toFixed(2)?.replace(/\d(?=(\d{3})+\.)/g, '$&,') ?? 0}
                                                                                </div>

                                                                            </div >

                                                                        </>
                                                                    )
                                                                }



                                                            })
                                                        }


                                                        < div className="font-poppins font-inter   grid grid-cols-4 sm:grid-cols-4 " >

                                                            <div className=" text-sm  font-bold border-solid border-x border-y">
                                                                Total
                                                            </div>

                                                            <div className=" text-sm  font-bold border-solid border-x border-y">
                                                                {gross?.toFixed(2)?.replace(/\d(?=(\d{3})+\.)/g, '$&,') ?? 0}
                                                            </div>
                                                            <div className=" text-sm  font-bold border-solid border-x border-y">
                                                                {hits?.toFixed(2)?.replace(/\d(?=(\d{3})+\.)/g, '$&,') ?? 0}
                                                            </div>
                                                            <div className=" text-sm  font-bold border-solid border-x border-y">
                                                            {kabig?.toFixed(2)?.replace(/\d(?=(\d{3})+\.)/g, '$&,') ==0? gross?.toFixed(2)?.replace(/\d(?=(\d{3})+\.)/g, '$&,') :(gross-hits)?.toFixed(2)?.replace(/\d(?=(\d{3})+\.)/g, '$&,')}
                                                      
                                                              </div>
                                                        </div>

                                                    </div>
                                                </div>
                                            </>
                                        )
                                    })
                                }



                            </>
                        )

                    })
                }






            </div>

        </div >
    )




}


