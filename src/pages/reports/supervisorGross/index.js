import Head from "next/head";
import Layout from "../../layouts";
import { Table, Tag } from "antd";
import { useEffect, useState } from "react";
import moment from "moment";
import { GetTellerVoids } from "../../api/tellerVoid";
import { GetSupervisorGross } from "../../api/supervisorGross";





export default function Home() {
    const [data, setData] = useState([]);
    const [from, setFrom] = useState(moment().format('yyyy-MM-DD'))
    const [to, setTo] = useState(moment().add(1, 'days').format('yyyy-MM-DD'))
    const [isfetching, Setisfetching] = useState(false);

    const handleGetData = async () => {
        Setisfetching(true);
        try {

            let ApiResponse = await GetSupervisorGross({
                from: from,
                to: to
            })
            setData(ApiResponse?.data?.data);

            Setisfetching(false);
        }
        catch (error) {
            if (error?.response.status == 401) {

                Cookies.remove('accessToken')
                router.push({
                    pathname: `/`,
                });


            }

            console.log('Get Data Error: ', error?.response);
        }

    }


    const columns = [
        {
            title: 'Supervisor',
            dataIndex: 'username',
            key: 'username',
            width: 130,
            render: (dom, entity) => {

                return dom

            }
        },
        // {
        //     title: 'Draw Time',
        //     dataIndex: 'drawTime',
        //     key: 'drawTime',
        //     width: 130,
        //     render: (dom, entity) => {
        //         if (dom > 12) {
        //             return <Tag color={'blue'}>{`${dom - 12}PM`}</Tag>
        //         }
        //         else {
        //             return <Tag color={'blue'}>{`${dom}AM`}</Tag>
        //         }

        //     }
        // },
        // {
        //     title: 'Total Void Count ',
        //     dataIndex: 'TotalVoidCount',
        //     key: 'TotalVoidCount',
        //     width: 130,
        //     render: (dom, entity) => {

        //         return dom

        //     }
        // },
        {
            title: 'Total Gross',
            dataIndex: 'TotalOverAllGross',
            key: 'TotalOverAllGross',
            width: 130,
            render: (dom, entity) => {

                return `â‚±${dom}.00`

            }
        },

    ];

    const handleChange = async (pagination, filters, sorter) => {

        // console.log( filters?.fullName);
        // // filters?.map((item) =>{

        // //   console.log( item);

        // // }); 


        Setisfetching(true);

        setInterval(() => {
            Setisfetching(false);

        }, 2000);

    };


    useEffect(() => {
        handleGetData()

    }, [])


    return (


        <Layout>

            <Head>
                <title>EEDO</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>


            <div>

                <Table dataSource={data} columns={columns} loading={isfetching} onChange={handleChange} scroll={{
                    x: 800,
                }} />
            </div>

        </Layout>
    )
}