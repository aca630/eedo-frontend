import { BookOutlined, CalendarOutlined, CarOutlined, CarTwoTone, DeleteOutlined, DownOutlined, EditOutlined, InsertRowBelowOutlined, InsertRowLeftOutlined, PlusCircleOutlined, PlusOutlined, SearchOutlined, ShopOutlined, ShoppingCartOutlined, ShopTwoTone, SnippetsOutlined, UserAddOutlined, UserDeleteOutlined, UserOutlined } from "@ant-design/icons";
import { Button, Divider, Dropdown, Form, Input, Modal, Popconfirm, Select, Space, Spin, Table, Tag } from "antd";
import Cookies from "js-cookie";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import Layout from "../layouts";
import { ToastContainer, toast } from 'react-toastify';
import moment from "moment";
import React from 'react';
import dayjs from 'dayjs';
import customParseFormat from 'dayjs/plugin/customParseFormat';



import dynamic from "next/dynamic";
import Link from "next/link";

// Dynamically import only on client
const ReactApexChart = dynamic(() => import("react-apexcharts"), { ssr: false });

dayjs.extend(customParseFormat);

export default function Home() {
  const router = useRouter();
  const [from, setFrom] = useState(moment().format('yyyy-MM-DD'))
  const [to, setTo] = useState(moment().add(1, 'days').format('yyyy-MM-DD'))
  const [totalTransaction, settotalTransaction] = useState(0)
  const [data, setData] = useState([])
  const [data5pm, setData5pm] = useState([])
  const [data9pm, setData9pm] = useState([])
  const [dataPie, setdataPie] = useState([])
  const [isfetching, Setisfetching] = useState(false);
  const [isRender, setIsrender] = useState(false);
  const [data2, setData2] = useState([{ item: 1 }])


  const chartData = {

    series: [
      {
        name: "Collections",
        data: [168, 385, 201, 298, 187, 195, 291, 110, 215, 390, 280, 112],
      },
    ],
    options: {
      plotOptions: {
        bar: {
          distributed: true, // enable per-bar colors
        },
      },
      colors: ["#3B82F6", "#F97316", "#10B981", "#EF4444", "#8B5CF6"],
      chart: {
        type: "bar",
        height: 350,
      },
      stroke: {
        curve: "smooth",
      },
      xaxis: {
        categories: [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
      },
      title: {
        text: "Monthly Collections",
        align: "left",
      },
    },
  };

  return (


    <Layout>
      <Head>
        <title>EEDO</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {

        !isfetching ?
          <>

            {/* <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="bg-white p-4 rounded shadow">Palengke</div>
              <div className="bg-white p-4 rounded shadow">Terminal</div>
              <div className="bg-white p-4 rounded shadow">Slaughter</div>
              <div className="bg-white p-4 rounded shadow">Cemetery</div>
            </div> */}

       
   

          </>
          : <div className="h-screen text-center noPrint">
            <Spin size="large" tip='Generating...' className="mt-20" />
          </div>
      }






      <ToastContainer />
    </Layout>


  )

}